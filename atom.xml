<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Holeski的博客</title>
  
  <subtitle>你为什么这么熟练啊！？</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-26T08:00:45.831Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Holeski</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS7安装maven</title>
    <link href="http://yoursite.com/2019/02/26/CentOS7%E5%AE%89%E8%A3%85maven/"/>
    <id>http://yoursite.com/2019/02/26/CentOS7安装maven/</id>
    <published>2019-02-26T07:03:32.000Z</published>
    <updated>2019-02-26T08:00:45.831Z</updated>
    
    <content type="html"><![CDATA[<p>下载maven-3.5.4, 可以在<a href="http://mirror.bit.edu.cn/apache/maven/maven-3/" target="_blank" rel="noopener">官网</a>中选择不同版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirror.bit.edu.cn/apache/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz</span><br></pre></td></tr></table></figure></p><p>解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-maven-3.5.4-bin.tar.gz</span><br></pre></td></tr></table></figure></p><p>配置环境变量, 编辑文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure></p><p>加入以下内容 ( 根据自己maven实际解压路径配置 )<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MAVEN_HOME=/home/software/maven-3.5.4</span><br><span class="line">PATH=$PATH:$MAVEN_HOME/bin</span><br><span class="line">export MAVEN_HOME</span><br></pre></td></tr></table></figure></p><p>使配置生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>测试是否安装成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -v</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;下载maven-3.5.4, 可以在&lt;a href=&quot;http://mirror.bit.edu.cn/apache/maven/maven-3/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;中选择不同版本&lt;br&gt;&lt;figure class=
      
    
    </summary>
    
      <category term="maven" scheme="http://yoursite.com/categories/maven/"/>
    
    
      <category term="CentOS7" scheme="http://yoursite.com/tags/CentOS7/"/>
    
      <category term="maven" scheme="http://yoursite.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>使用GitLab-Runner搭建GitLab持续集成/部署环境</title>
    <link href="http://yoursite.com/2019/02/26/%E4%BD%BF%E7%94%A8GitLab-Runner%E6%90%AD%E5%BB%BAGitLab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90-%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/02/26/使用GitLab-Runner搭建GitLab持续集成-部署环境/</id>
    <published>2019-02-26T03:22:47.000Z</published>
    <updated>2019-02-26T07:54:34.190Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相关背景"><a href="#相关背景" class="headerlink" title="相关背景"></a>相关背景</h2><ol><li><p>GitLab</p><blockquote><p>是一套基于Ruby开发的开源Git项目管理应用，其提供的功能和Github类似，不同的是GitLab提供一个GitLab CE社区版本，用户可以将其部署在自己的服务器上，这样就可以用于团队内部的项目代码托管仓库。</p></blockquote></li><li><p>GitLab CI</p><blockquote><p>是GitLab 提供的持续集成服务(从8.0版本之后，GitLab CI已经集成在GitLab中了)，只要在你的仓库根目录下创建一个.gitlab-ci.yml 文件， 并为该项目指派一个Runner，当有合并请求或者Push操作时，你写在.gitlab-ci.yml中的构建脚本就会开始执行。</p></blockquote></li><li><p>GitLab Runner</p><blockquote><p>是配合GitLab CI进行构建任务的应用程序，GitLab CI负责yml文件中各种阶段流程的执行，而GitLab Runner就是具体的负责执行每个阶段的脚本执行，一般来说GitLab Runner需要安装在单独的机器上通过其提供的注册操作跟GitLab CI进行绑定，当然，你也可以让其和GitLab安装在一起，只是有的情况下，你代码的构建过程对资源消耗十分严重的时候，会拖累GitLab给其他用户提供政策的Git服务。</p></blockquote></li><li><p>持续集成/部署环境</p><blockquote><p>持续集成是程序开发人员在频繁的提交代码之后，能有相应的环境能对其提交的代码自动执行构建(Build)、测试(Test),然后根据测试结果判断新提交的代码能否合并加入主分支当中,而持续部署也就是在持续集成之后自动将代码部署(Deploy)到生成环境上</p></blockquote></li></ol><p>开启GitLab可持续集成功能, 你需要通过如下两步启用GitLab CI功能</p><ol><li>为你的项目配置一个GitLab Runner</li><li>新建一个.gitlab-ci.yml文件在你项目的根目录</li></ol><h2 id="创建GitLab-Runner以及配置"><a href="#创建GitLab-Runner以及配置" class="headerlink" title="创建GitLab Runner以及配置"></a>创建GitLab Runner以及配置</h2><p>拉取官方镜像, alpine版镜像体积比较小, 也可以使用latest版<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull gitlab/gitlab-runner:alpine</span><br></pre></td></tr></table></figure></p><p>启动gitlab-runner容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name gitlab-runner --restart always \</span><br><span class="line">  -v /srv/gitlab-runner/config:/etc/gitlab-runner \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  gitlab/gitlab-runner:alpine</span><br></pre></td></tr></table></figure></p><p>执行下面命令注册一个runner :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it gitlab-runner gitlab-ci-multi-runner register</span><br></pre></td></tr></table></figure></p><p>接下来出现以下内容, 根据提示输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Please enter the gitlab-ci coordinator URL:</span><br><span class="line"># 示例：http://10.12.2.22</span><br><span class="line">Please enter the gitlab-ci token for this runner:</span><br><span class="line"># xxxxxx</span><br><span class="line">Please enter the gitlab-ci description for this runner:</span><br><span class="line"># 示例：test</span><br><span class="line">Please enter the gitlab-ci tags for this runner (comma separated):</span><br><span class="line"># 示例：test</span><br><span class="line">Please enter the executor: docker, parallels, shell, kubernetes, docker-ssh, ssh, virtualbox, docker+machine, docker-ssh+machine:</span><br><span class="line"># ssh</span><br><span class="line">Please enter the SSH server address (e.g. my.server.com):</span><br><span class="line"># 10.12.2.22</span><br><span class="line">Please enter the SSH server port (e.g. 22):</span><br><span class="line"># 22  </span><br><span class="line">Please enter the SSH user (e.g. root):</span><br><span class="line"># root</span><br><span class="line">Please enter the SSH password (e.g. docker.io):</span><br><span class="line"># 123456</span><br><span class="line">Please enter path to SSH identity file (e.g. /home/user/.ssh/id_rsa):</span><br><span class="line"></span><br><span class="line">Runner registered successfully. Feel free to start it, but if it&apos;s running already the config should be automatically reloaded!</span><br></pre></td></tr></table></figure></p><p>说明： </p><ol><li>gitlab ci 的地址以及token，从你要配置该runner到哪个项目，就去gitlab下该项目首页右侧设置—》CI/CD Pipelines—》Specific Runners下可以找到。 </li><li>gitlab-ci tags这个很重要，在项目构建流程yaml文件里面指定tag，就是匹配使用哪个tag的runner，这里我定义了test，回头再配置文件里面就指定这个tag。 </li><li>executor：执行者可以有很多种，这里我们使用ssh, 登录进入后再构建。 </li></ol><p>如果想修改注册信息, 可以编辑文件 <code>vim /srv/gitlab-runner/config/config.toml</code>, 内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">concurrent = 1</span><br><span class="line">check_interval = 0</span><br><span class="line"></span><br><span class="line">[session_server]</span><br><span class="line">  session_timeout = 1800</span><br><span class="line"></span><br><span class="line">[[runners]]</span><br><span class="line">  name = &quot;wta-admin&quot;</span><br><span class="line">  url = &quot;http://10.12.2.22/&quot;</span><br><span class="line">  token = &quot;JKLASJDFIAOSKJ&quot;</span><br><span class="line">  executor = &quot;ssh&quot;</span><br><span class="line">  [runners.ssh]</span><br><span class="line">    user = &quot;root&quot;</span><br><span class="line">    password = &quot;123456&quot;</span><br><span class="line">    host = &quot;10.12.2.22&quot;</span><br><span class="line">    port = &quot;22&quot;</span><br><span class="line">  [runners.cache]</span><br><span class="line">    [runners.cache.s3]</span><br><span class="line">    [runners.cache.gcs]</span><br></pre></td></tr></table></figure></p><p>修改完记得重启docker<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart gitlab-runner</span><br></pre></td></tr></table></figure></p><p>gitlab-runner已经配置完成。</p><h2 id="在gitlab项目的根目录新建-gitlab-ci-yml文件"><a href="#在gitlab项目的根目录新建-gitlab-ci-yml文件" class="headerlink" title="在gitlab项目的根目录新建.gitlab-ci.yml文件"></a>在gitlab项目的根目录新建.gitlab-ci.yml文件</h2><p>gitlab-ci.yml文件是用来配置GitLab CI进行构建流程的配置文件，其采用YAML语法,所以你需要额外注意要用空格来代替缩进，而不是Tabs。<br>.gitlab-ci.yml文件如下。查看<a href="https://segmentfault.com/a/1190000011890710" target="_blank" rel="noopener">详细配置</a>或<a href="https://docs.gitlab.com/ce/ci/yaml/README.html" target="_blank" rel="noopener">官方配置</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"># 利用caches字段来指定下面将要进行的job任务中需要共享的文件目录,如果没有，</span><br><span class="line"># 每个Job开始的时候，GitLab Runner都会删掉.gitignore里面的文件</span><br><span class="line">cache:</span><br><span class="line">  key: $&#123;CI_BUILD_REF_NAME&#125;</span><br><span class="line">  paths:</span><br><span class="line">    - target</span><br><span class="line"></span><br><span class="line"># 利用stages关键字来定义持续构建过程中的三个阶段: package、build_docker、deploy_docker</span><br><span class="line"># 1. 所有 Stages 会按照顺序运行，即当一个 Stage 完成后，下一个 Stage 才会开始</span><br><span class="line"># 2. 只有当所有 Stages 完成后，该构建任务 (Pipeline) 才会成功</span><br><span class="line"># 3. 如果任何一个 Stage 失败，那么后面的 Stages 不会执行，该构建任务 (Pipeline) 失败</span><br><span class="line">stages:</span><br><span class="line">  - package</span><br><span class="line">  - build_docker</span><br><span class="line">  - deploy_docker</span><br><span class="line"></span><br><span class="line">############################### maven打包 ###############################</span><br><span class="line"># 定义一个叫package的Job任务, package为job名, 可随意命名。下同</span><br><span class="line"># stage字段声明属于package阶段，这个job会第一个执行，执行一些环境的初始化工作。</span><br><span class="line"># script字段指定该任务执行的内容, 由于是CentOS, 此处执行shell语句。下同</span><br><span class="line">package:</span><br><span class="line">  stage: package</span><br><span class="line">  tags:                       #这里的tags一定要属于注册时填的tags中，下面同理</span><br><span class="line">    - test</span><br><span class="line">  script:</span><br><span class="line">    - echo &quot;begining to execute package project&quot;</span><br><span class="line">    - docker stop test &amp;&amp; docker rm test &amp;&amp; docker rmi test:1.0</span><br><span class="line">    - mvn clean install -Dmaven.test.skip=true</span><br><span class="line">    - cp -f target/*.jar /data/</span><br><span class="line">  artifacts:</span><br><span class="line">    paths:</span><br><span class="line">      - target/*.jar    # 将maven构建成功的jar包作为构建产出导出，可在下一个stage的任务中使用 目前没卵用</span><br><span class="line"></span><br><span class="line">############################### 构建镜像 ############################### </span><br><span class="line">build_docker:</span><br><span class="line">  stage: build_docker</span><br><span class="line">  script:</span><br><span class="line">    - echo &quot;begining to execute build project&quot;</span><br><span class="line">    - docker build -t test:1.0 /data/</span><br><span class="line">  tags:</span><br><span class="line">    - test</span><br><span class="line"></span><br><span class="line">############################### 部署运行 ############################### </span><br><span class="line"># only字段指定需要执行的所在分支或者标签</span><br><span class="line">deploy_docker:</span><br><span class="line">  stage: deploy_docker</span><br><span class="line">  script:</span><br><span class="line">    - echo &quot;begining to execute deploy project&quot;</span><br><span class="line">    - docker run -d -p 80:80 --restart always --name=test test:1.0</span><br><span class="line">    - echo &quot;dev部署成功, 嘻嘻嘻......&quot;</span><br><span class="line">  only:</span><br><span class="line">    - dev</span><br><span class="line">  tags:</span><br><span class="line">    - test</span><br><span class="line"></span><br><span class="line">deploy_docker:</span><br><span class="line">  stage: deploy_docker</span><br><span class="line">  script:</span><br><span class="line">    - echo &quot;begining to execute deploy project&quot;</span><br><span class="line">    - docker run -d -p 8080:80 --restart always --name=test test:1.0</span><br><span class="line">    - echo &quot;master部署成功, 嘻嘻嘻......&quot;</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line">  tags:</span><br><span class="line">    - test</span><br></pre></td></tr></table></figure><p>创建完成后push到gitlab, 此时打开项目首页的Piplines标签页，会发现一个状态标识为pending的构建任务, gitlab-CI搭建完成</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;相关背景&quot;&gt;&lt;a href=&quot;#相关背景&quot; class=&quot;headerlink&quot; title=&quot;相关背景&quot;&gt;&lt;/a&gt;相关背景&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;GitLab&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;是一套基于Ruby开发的开源Git项目管理应用，其提
      
    
    </summary>
    
      <category term="GitLab" scheme="http://yoursite.com/categories/GitLab/"/>
    
    
      <category term="GitLab-CI" scheme="http://yoursite.com/tags/GitLab-CI/"/>
    
      <category term="GitLab" scheme="http://yoursite.com/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装Nginx及配置</title>
    <link href="http://yoursite.com/2019/02/25/centos7%E5%AE%89%E8%A3%85Nginx%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/02/25/centos7安装Nginx及配置/</id>
    <published>2019-02-25T06:41:56.000Z</published>
    <updated>2019-02-25T07:52:56.066Z</updated>
    
    <content type="html"><![CDATA[<p>Nginx是一款轻量级的网页服务器、反向代理服务器。相较于Apache、lighttpd具有占有内存少，稳定性高等优势。<strong>它主要的用途是提供反向代理服务</strong>。</p><h2 id="安装所需环境"><a href="#安装所需环境" class="headerlink" title="安装所需环境"></a>安装所需环境</h2><ol><li>gcc 安装</li></ol><p>安装 nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境，如果没有 gcc 环境，则需要安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure></p><ol start="2"><li>PCRE pcre-devel 安装</li></ol><p>PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。nginx也需要此库。命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure></p><ol start="3"><li>zlib 安装</li></ol><p>zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure></p><ol start="4"><li>OpenSSL 安装</li></ol><p>OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。<br>nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 Centos 安装 OpenSSL 库。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure></p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><ul><li>直接下载.tar.gz安装包，地址：<a href="https://nginx.org/en/download.html" target="_blank" rel="noopener">https://nginx.org/en/download.html</a></li><li><p>使用wget命令下载（推荐）:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://nginx.org/download/nginx-1.14.2.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.10.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>执行以下命令配置安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.14.2         # 进入Nginx目录</span><br><span class="line">./configure             # 使用默认配置</span><br><span class="line">make &amp;&amp; make install    # 编辑安装</span><br></pre></td></tr></table></figure></li><li><p>查找安装路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis nginx</span><br></pre></td></tr></table></figure></li></ul><p>安装完成, 以下是Nginx常用命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx –t                          # 测试配置文件是否正常</span><br><span class="line">/usr/local/nginx/sbin/nginx                             # 启动Nginx</span><br><span class="line">/usr/local/nginx/sbin/nginx -s stop                     # 停止Nginx</span><br><span class="line">/usr/local/nginx/sbin/nginx -s reload                   # 重新加载配置文件</span><br></pre></td></tr></table></figure></p><ul><li>开机自启动</li></ul><p>编辑文件 rc.local<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.local</span><br></pre></td></tr></table></figure></p><p>在最下面增加一行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure></p><p>设置执行权限：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/rc.local</span><br></pre></td></tr></table></figure></p><p>Nginx安装完毕</p><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Nginx是一款轻量级的网页服务器、反向代理服务器。相较于Apache、lighttpd具有占有内存少，稳定性高等优势。&lt;strong&gt;它主要的用途是提供反向代理服务&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&quot;安装所需环境&quot;&gt;&lt;a href=&quot;#安装所需环境&quot; class
      
    
    </summary>
    
      <category term="Nginx" scheme="http://yoursite.com/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
      <category term="centos7" scheme="http://yoursite.com/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装redis及开机自启动</title>
    <link href="http://yoursite.com/2019/02/25/centos7%E5%AE%89%E8%A3%85redis%E5%8F%8A%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8/"/>
    <id>http://yoursite.com/2019/02/25/centos7安装redis及开机自启动/</id>
    <published>2019-02-25T02:29:06.000Z</published>
    <updated>2019-02-25T07:52:58.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先确认是否具有root权限，因为vim、设定redis开机启动需要root权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su</span><br></pre></td></tr></table></figure></p><p>新建软件安装目录和配置文件存放目录(已有可以不用新建)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/software         # 存放redis</span><br><span class="line">mkdir -p /usr/local/redis       # 存放配置文件</span><br></pre></td></tr></table></figure></p><p>下载redis, 可以在<a href="http://download.redis.io/releases" target="_blank" rel="noopener">官网</a>获取指定版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/software   # 进入安装目录</span><br><span class="line">wget http://download.redis.io/releases/redis-5.0.3.tar.gz   #下载</span><br></pre></td></tr></table></figure></p><p>依次执行以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xzf redis-5.0.3.tar.gz      # 解压缩</span><br><span class="line">cd redis-5.0.3                  # 进入解压后的文件目录</span><br><span class="line">make                            # 编译安装</span><br></pre></td></tr></table></figure></p><p>目前已经安装完毕</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>复制配置文件( 相当于备份 )<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /home/software/redis-5.0.3/src/redis-server /usr/local/redis/</span><br><span class="line">cp /home/software/redis-5.0.3/src/redis-cli /usr/local/redis/</span><br><span class="line">cp /home/software/redis-5.0.3/redis.conf /usr/local/redis/</span><br></pre></td></tr></table></figure></p><p>编辑配置文件 redis.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/redis/redis.conf</span><br></pre></td></tr></table></figure></p><p>daemonize 改为yes 后台运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># By default Redis does not run as a daemon. Use &apos;yes&apos; if you need it.</span><br><span class="line"># Note that Redis will write a pid file in /var/run/redis.pid when daemonized.</span><br><span class="line">daemonize yes</span><br></pre></td></tr></table></figure></p><p>把 <code>bind 127.0.0.1</code>注释掉, 放开ip限制 ( 可选 )<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># bind 127.0.0.1</span><br></pre></td></tr></table></figure></p><p>把<code># requirepass foobared</code>注释放开并修改密码为123456( 可选 )<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure></p><p>添加开机自启动服务文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/redis.service</span><br></pre></td></tr></table></figure></p><p>加入以下内容, 在vim中一定要检查是否一致<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The redis-server Process Manager</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">PIDFile=/var/run/redis_6379.pid</span><br><span class="line">ExecStart=/usr/local/redis/redis-server /usr/local/redis/redis.conf         </span><br><span class="line">ExecReload=/bin/kill -USR2 $MAINPID</span><br><span class="line">ExecStop=/bin/kill -SIGINT $MAINPID</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>设置开机自启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload </span><br><span class="line">systemctl start redis.service </span><br><span class="line">systemctl enable redis.service</span><br></pre></td></tr></table></figure></p><p>测试redis, 启动redis客户端, 依次执行以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/redis-cli</span><br><span class="line">127.0.0.1:6379&gt; auth 123456</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; set name Holeski</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line">&quot;holeski&quot;</span><br></pre></td></tr></table></figure></p><p>至此, redis已安装配置成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;首先确认是否具有root权限，因为vim、设定redis开机启动需要root权限&lt;br&gt;&lt;figure class=&quot;highlight p
      
    
    </summary>
    
      <category term="redis" scheme="http://yoursite.com/categories/redis/"/>
    
    
      <category term="centos7" scheme="http://yoursite.com/tags/centos7/"/>
    
      <category term="redis" scheme="http://yoursite.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装mariaDB最新版</title>
    <link href="http://yoursite.com/2019/02/24/CentOS7%E5%AE%89%E8%A3%85mariaDB%E6%9C%80%E6%96%B0%E7%89%88/"/>
    <id>http://yoursite.com/2019/02/24/CentOS7安装mariaDB最新版/</id>
    <published>2019-02-24T08:26:41.000Z</published>
    <updated>2019-02-25T07:52:57.434Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Maria-DB"><a href="#安装Maria-DB" class="headerlink" title="安装Maria DB"></a>安装Maria DB</h2><p>来自<a href="https://downloads.mariadb.org/mariadb/repositories/" target="_blank" rel="noopener">官网的包源</a></p><p>编辑新增文件:  vim /etc/yum.repos.d/MariaDB.repo 保存以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mariadb]</span><br><span class="line">name = MariaDB</span><br><span class="line">baseurl = http://yum.mariadb.org/10.3/centos7-amd64/</span><br><span class="line">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure><p>移除已安装的mariaDB/MySQL:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove $(rpm -qa | grep -i mysql)</span><br><span class="line">yum remove $(rpm -qa | grep -i mari)</span><br></pre></td></tr></table></figure></p><p>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y MariaDB-server MariaDB-client</span><br></pre></td></tr></table></figure></p><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><p>运行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb         # 启动mariaDB</span><br><span class="line">systemctl enable mariadb        # 设置开机自启动</span><br><span class="line">mysql_secure_installation       # 开始初始化数据库</span><br></pre></td></tr></table></figure></p><p>首先是设置密码，会提示先输入密码，后面是一些其他配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Enter current password for root (enter for none): &lt;–初次运行直接回车</span><br><span class="line"></span><br><span class="line">Set root password? [Y/n] &lt;– 是否设置root用户密码，输入y并回车或直接回车</span><br><span class="line"></span><br><span class="line">New password: &lt;– 设置root用户的密码</span><br><span class="line"></span><br><span class="line">Re-enter new password: &lt;– 再输入一次你设置的密码</span><br><span class="line"></span><br><span class="line">Remove anonymous users? [Y/n] &lt;– 是否删除匿名用户，回车</span><br><span class="line"></span><br><span class="line">Disallow root login remotely? [Y/n] &lt;–是否禁止root远程登录,回车,</span><br><span class="line"></span><br><span class="line">Remove test database and access to it? [Y/n] &lt;– 是否删除test数据库，回车</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? [Y/n] &lt;– 是否重新加载权限表，回车</span><br></pre></td></tr></table></figure></p><p>初始化MariaDB完成，接下来测试登录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; mysql -uroot -ppassword</span><br></pre></td></tr></table></figure></p><p>登录成功，查看数据库版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select version();</span><br></pre></td></tr></table></figure></p><p>配置MariaDB的字符集</p><p>编辑文件：vi /etc/my.cnf ，在[mysqld]标签下添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">init_connect=&apos;SET collation_connection = utf8_unicode_ci&apos; </span><br><span class="line">init_connect=&apos;SET NAMES utf8&apos; </span><br><span class="line">character-set-server=utf8 </span><br><span class="line">collation-server=utf8_unicode_ci </span><br><span class="line">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure></p><p>编辑文件：vi /etc/my.cnf.d/client.cnf ，在[client]下添加 ( 如果没有可以不加 )<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></p><p>编辑文件： vi /etc/my.cnf.d/mysql-clients.cnf ，在[mysql]下添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></p><p> 全部配置完成，重启mariadb<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure></p><p>之后进入MariaDB查看字符集<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &quot;%character%&quot;;show variables like &quot;%collation%&quot;;</span><br></pre></td></tr></table></figure></p><p>显示为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">| Variable_name        | Value           |</span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">| collation_connection | utf8_unicode_ci |</span><br><span class="line">| collation_database   | utf8_unicode_ci |</span><br><span class="line">| collation_server     | utf8_unicode_ci |</span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>字符集配置完成。</p><p>添加用户，设置权限</p><ol><li>创建用户命令</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user username@&apos;localhost&apos; identified by &apos;password&apos;;</span><br></pre></td></tr></table></figure><ol start="2"><li>授予外网登陆权限 </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all privileges on *.* to username@&apos;%&apos; identified by &apos;password&apos;;</span><br></pre></td></tr></table></figure><ol start="3"><li>授予权限并且可以授权</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all privileges on *.* to username@&apos;hostname&apos; identified by &apos;password&apos; with grant option;</span><br></pre></td></tr></table></figure><ol start="4"><li>刷新权限</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>安装成功。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装Maria-DB&quot;&gt;&lt;a href=&quot;#安装Maria-DB&quot; class=&quot;headerlink&quot; title=&quot;安装Maria DB&quot;&gt;&lt;/a&gt;安装Maria DB&lt;/h2&gt;&lt;p&gt;来自&lt;a href=&quot;https://downloads.mariadb.o
      
    
    </summary>
    
      <category term="mariaDB" scheme="http://yoursite.com/categories/mariaDB/"/>
    
    
      <category term="mariaDB" scheme="http://yoursite.com/tags/mariaDB/"/>
    
      <category term="CentOS7" scheme="http://yoursite.com/tags/CentOS7/"/>
    
  </entry>
  
  <entry>
    <title>springboot-maven</title>
    <link href="http://yoursite.com/2019/02/01/springboot-maven/"/>
    <id>http://yoursite.com/2019/02/01/springboot-maven/</id>
    <published>2019-02-01T08:11:16.000Z</published>
    <updated>2019-02-01T08:21:44.563Z</updated>
    
    <content type="html"><![CDATA[<h1 id="springboot-maven"><a href="#springboot-maven" class="headerlink" title="springboot-maven"></a>springboot-maven</h1><h2 id="First"><a href="#First" class="headerlink" title="First"></a>First</h2><h2 id="Second"><a href="#Second" class="headerlink" title="Second"></a>Second</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;springboot-maven&quot;&gt;&lt;a href=&quot;#springboot-maven&quot; class=&quot;headerlink&quot; title=&quot;springboot-maven&quot;&gt;&lt;/a&gt;springboot-maven&lt;/h1&gt;&lt;h2 id=&quot;First&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="springboot" scheme="http://yoursite.com/categories/springboot/"/>
    
    
      <category term="maven" scheme="http://yoursite.com/tags/maven/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/01/31/hello-world/"/>
    <id>http://yoursite.com/2019/01/31/hello-world/</id>
    <published>2019-01-31T08:45:42.000Z</published>
    <updated>2019-02-25T00:44:45.292Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="入门" scheme="http://yoursite.com/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>springboot</title>
    <link href="http://yoursite.com/2019/01/31/springboot/"/>
    <id>http://yoursite.com/2019/01/31/springboot/</id>
    <published>2019-01-31T08:45:42.000Z</published>
    <updated>2019-02-01T08:00:00.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="构建微服务：Spring-boot-入门篇"><a href="#构建微服务：Spring-boot-入门篇" class="headerlink" title="构建微服务：Spring boot 入门篇"></a>构建微服务：Spring boot 入门篇</h1><h2 id="什么是spring-boot"><a href="#什么是spring-boot" class="headerlink" title="什么是spring boot"></a>什么是spring boot</h2><p>Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。用我的话来理解，就是spring boot其实不是什么新的框架，它默认配置了很多框架的使用方式，就像maven整合了所有的jar包，spring boot整合了所有的框架（有点夸张）。</p><h2 id="使用spring-boot有什么好处"><a href="#使用spring-boot有什么好处" class="headerlink" title="使用spring boot有什么好处"></a>使用spring boot有什么好处</h2><p>其实就是简单、快速、方便！平时如果我们需要搭建一个spring web项目的时候需要怎么做呢？</p><ol><li>配置web.xml，加载spring和spring mvc</li><li>配置数据库连接、配置spring事务</li><li>配置加载配置文件的读取，开启注解</li><li>配置日志文件</li></ol><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><p>说了那么多，手痒痒的很，马上来一发试试!</p><h2 id="maven构建项目"><a href="#maven构建项目" class="headerlink" title="maven构建项目"></a>maven构建项目</h2><ol><li>访问<a href="http://start.spring.io/" target="_blank" rel="noopener">http://start.spring.io/</a></li><li>选择构建工具Maven Project、Spring Boot版本1.3.6以及一些工程基本信息，点击“Switch to the full version.”java版本选择1.7。</li><li>点击Generate Project下载项目压缩包</li><li>解压后，使用IDEA Import</li></ol><h2 id="项目结构介绍"><a href="#项目结构介绍" class="headerlink" title="项目结构介绍"></a>项目结构介绍</h2><p>Spring Boot的基础结构共三个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l src/main/java  程序开发以及主程序入口</span><br><span class="line">l src/main/resources 配置文件</span><br><span class="line">l src/test/java  测试程序</span><br></pre></td></tr></table></figure><p>另外，spingboot建议的目录结果如下：<br>root package结构：com.example.myproject</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">com</span><br><span class="line">  +- example</span><br><span class="line">    +- myproject</span><br><span class="line">      +- Application.java</span><br><span class="line">      |</span><br><span class="line">      +- domain</span><br><span class="line">      |  +- Customer.java</span><br><span class="line">      |  +- CustomerRepository.java</span><br><span class="line">      |</span><br><span class="line">      +- service</span><br><span class="line">      |  +- CustomerService.java</span><br><span class="line">      |</span><br><span class="line">      +- controller</span><br><span class="line">      |  +- CustomerController.java</span><br><span class="line">      |</span><br></pre></td></tr></table></figure><ol><li>Application.java 建议放到跟目录下面,主要用于做一些框架配置</li><li>domain目录主要用于实体（Entity）与数据访问层（Repository）</li><li>service 层主要是业务类代码</li><li>controller 负责页面访问控制</li></ol><p>采用默认配置可以省去很多配置，当然也可以根据自己的喜欢来进行更改。最后，启动Application main方法，至此一个java项目搭建好了！</p><p>引入web模块</p><ol><li>pom.xml中添加支持web的模块：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line"> &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>pom.xml文件中默认有两个模块：</p><p>spring-boot-starter：核心模块，包括自动配置支持、日志和YAML；<br>spring-boot-starter-test：测试模块，包括JUnit、Hamcrest、Mockito。</p><ol start="2"><li>编写controller内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class HelloWorldController &#123;</span><br><span class="line">    @RequestMapping(&quot;/hello&quot;)</span><br><span class="line">    public String index() &#123;</span><br><span class="line">        return &quot;Hello World&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>@RestController的意思就是controller里面的方法都以json格式输出，不用再写什么jackjson配置的了！</p><ol start="3"><li>启动主程序，打开浏览器访问<a href="http://localhost:8080/hello，就可以看到效果了，有木有很简单！" target="_blank" rel="noopener">http://localhost:8080/hello，就可以看到效果了，有木有很简单！</a></li></ol><h2 id="如何做单元测试"><a href="#如何做单元测试" class="headerlink" title="如何做单元测试"></a>如何做单元测试</h2><p>打开的src/test/下的测试入口，编写简单的http请求来测试；使用mockmvc进行，利用MockMvcResultHandlers.print()打印出执行结果。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@RunWith(SpringJUnit4ClassRunner.class)</span><br><span class="line">@SpringApplicationConfiguration(classes = MockServletContext.class)</span><br><span class="line">@WebAppConfiguration</span><br><span class="line">public class HelloWorldControlerTests &#123;</span><br><span class="line">    private MockMvc mvc;</span><br><span class="line">    @Before</span><br><span class="line">    public void setUp() throws Exception &#123;</span><br><span class="line">        mvc = MockMvcBuilders.standaloneSetup(new HelloWorldController()).build();</span><br><span class="line">    &#125;</span><br><span class="line">    @Test</span><br><span class="line">    public void getHello() throws Exception &#123;</span><br><span class="line">    mvc.perform(MockMvcRequestBuilders.get(&quot;/hello&quot;).accept(MediaType.APPLICATION_JSON))</span><br><span class="line">                .andExpect(MockMvcResultMatchers.status().isOk())</span><br><span class="line">                .andDo(MockMvcResultHandlers.print())</span><br><span class="line">                .andReturn();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="开发环境的调试"><a href="#开发环境的调试" class="headerlink" title="开发环境的调试"></a>开发环境的调试</h2><p>热启动在正常开发项目中已经很常见了吧，虽然平时开发web项目过程中，改动项目启重启总是报错；但springBoot对调试支持很好，修改之后可以实时生效，需要添加以下的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">        &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">        &lt;plugin&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;configuration&gt;</span><br><span class="line">                &lt;fork&gt;true&lt;/fork&gt;</span><br><span class="line">            &lt;/configuration&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">   &lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;构建微服务：Spring-boot-入门篇&quot;&gt;&lt;a href=&quot;#构建微服务：Spring-boot-入门篇&quot; class=&quot;headerlink&quot; title=&quot;构建微服务：Spring boot 入门篇&quot;&gt;&lt;/a&gt;构建微服务：Spring boot 入门篇&lt;/
      
    
    </summary>
    
      <category term="springboot" scheme="http://yoursite.com/categories/springboot/"/>
    
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>gitlab</title>
    <link href="http://yoursite.com/2019/01/31/gitlab/"/>
    <id>http://yoursite.com/2019/01/31/gitlab/</id>
    <published>2019-01-31T08:44:57.000Z</published>
    <updated>2019-02-25T00:44:45.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gitlab安装配置"><a href="#gitlab安装配置" class="headerlink" title="gitlab安装配置"></a>gitlab安装配置</h1><h2 id="拉取gitlab镜像"><a href="#拉取gitlab镜像" class="headerlink" title="拉取gitlab镜像"></a>拉取gitlab镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. git pull gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;gitlab安装配置&quot;&gt;&lt;a href=&quot;#gitlab安装配置&quot; class=&quot;headerlink&quot; title=&quot;gitlab安装配置&quot;&gt;&lt;/a&gt;gitlab安装配置&lt;/h1&gt;&lt;h2 id=&quot;拉取gitlab镜像&quot;&gt;&lt;a href=&quot;#拉取gitlab镜像&quot;
      
    
    </summary>
    
      <category term="gitlab" scheme="http://yoursite.com/categories/gitlab/"/>
    
    
      <category term="gitlab" scheme="http://yoursite.com/tags/gitlab/"/>
    
      <category term="版本控制" scheme="http://yoursite.com/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
</feed>
